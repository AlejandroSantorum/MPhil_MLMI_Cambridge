#!/bin/tcsh
#$ -S /bin/tcsh

#set verbose
# last update: 4/08/2016

############################################################
# Step: phone loop decoding applied to any involved systems
############################################################

set ALLARGS=($*)
set CHANGED
if ( $#argv > 1 ) then
while ( $?CHANGED )
    unset CHANGED
    if ( "$argv[1]" == "-CORETEST" ) then
        set CHANGED
        shift argv
        set CORETEST
        if ($?SUBTRAIN) then
            unset SUBTRAIN
        endif 
    endif
    if ( "$argv[1]" == "-SUBTRAIN" ) then
        set CHANGED
        shift argv
        set SUBTRAIN
        if ($?CORETEST) then
            unset CORETEST
        endif
    endif
    if ( "$argv[1]" == "-DECODEHTE" )  then
        set CHANGED
        shift argv
        set DECODEHTE = $argv[1]
        shift argv
    endif
    if ( "$argv[1]" == "-GRAMMARSCALE" )  then
        set CHANGED
        shift argv
        set GRAMMARSCALE = $argv[1]
        shift argv
    endif
    if ( "$argv[1]" == "-INSWORD" )  then
        set CHANGED
        shift argv
        set INSWORD = $argv[1]
        shift argv
    endif
    if ( "$argv[1]" == "-BEAMWIDTH" )  then
        set CHANGED
        shift argv
        set BEAMWIDTH = $argv[1]
        shift argv
    endif
    if ( "$argv[1]" == "-TOOLSDIR" )  then
        set CHANGED
        shift argv
        set TOOLSDIR = $argv[1]
        shift argv
    endif
end
endif

# Check Number of Args 
if ( $#argv != 3) then
    echo "Usage: $0 [-CORETEST | -SUBTRAIN] [-DECODEHTE path] [-GRAMMARSCALE float] [-INSWORD float] [-BEAMWIDTH float] [-TOOLSDIR path] abspath_sourcedir hmmdir systemdir"
    echo " e.g.: $0 /home/timit/SF0/ml hmm7 SF0/decode-hmm7-test.loop"
    echo " -CORETEST: use core testing set rather than full testing set"
    echo " -SUBTRAIN: to test on a sub set of the train set (1/3)"
    echo " -DECODEHTE path: use specified decoding HTE file"
    echo " -GRAMMARSCALE float: set the grammar scaling factor option -s to the value of float for HVite"
    echo " -INSWORD float: set the word insertion penalty option -p to the value of float for HVite"
    echo " -BEAMWIDTH float: set the beam width option -t to the value of float for HVite"
    echo " -TOOLSDIR path: use specified dir rather than default TIMITTOOLS"
    exit 1
endif

set SRCDIR = $argv[1]
set HMMDIR = $argv[2]
set TGTDIR = $argv[3]

if (! -f $SRCDIR/environment) then
    echo "The environment file $SRCDIR/environment is missing"
    exit 1
endif
source $SRCDIR/environment
if (-f /opt/intel/composerxe/bin/compilervars.csh) then
    source /opt/intel/composerxe/bin/compilervars.csh intel64
endif

if (! -f $SRCDIR/$HMMDIR/MMF) then
    echo "Source HMMs $SRCDIR/$HMMDIR/MMF do not exist"
    exit 1
endif
if (! -f $SRCDIR/hmms.mlist) then
    echo "Source HMM list $SRCDIR/hmms.mlist does not exist"
    exit 1
endif

if ( -d $TGTDIR) then
    echo "Target directory $TGTDIR exists - delete before rerun"
    exit 1
endif
mkdir -p $TGTDIR

if (! -d CMDs/$TGTDIR) mkdir -p CMDs/$TGTDIR
set MEMO = records
echo "------------------------------------" >> CMDs/$TGTDIR/${MEMO}.cmds
echo "$0 $ALLARGS" >> CMDs/${TGTDIR}/${MEMO}.cmds
echo "------------------------------------" >> CMDs/$TGTDIR/${MEMO}.cmds


# change to the target working dir and do the basic steups
cd $TGTDIR
#     setup the tools dir
if ($?TOOLSDIR) then
    ln -s $TOOLSDIR ./tools
else
    ln -s $TIMITTOOLS ./tools
endif
if ( -d tools/htklib/cuda) then
    setenv LD_LIBRARY_PATH tools/htklib:$LD_LIBRARY_PATH
endif
#     setup the lib and cfgs
ln -s ${TIMITLIB} ./
cp lib/cfgs/basic${FEADIFF}.cfg ./basic.cfg
cp $SRCDIR/hmms.mlist ./hmms.mlist


# link decoding HMMs
mkdir decodeHMMs
ln -s $SRCDIR/$HMMDIR/MMF decodeHMMs/MMF


# copy the right decoding config
set nhmms = `wc -l hmms.mlist | awk '{print $1}'`
set nmono = `wc -l lib/mlists/mono+sil.mlist | awk '{print $1}'`
if ( $nhmms == $nmono ) then
    echo "Monophone system decoding"
    cp lib/cfgs/viterbi-mono.cfg ./viterbi.cfg
else
    echo "Triphone system decoding"
    cp lib/cfgs/viterbi-xwtri.cfg ./viterbi.cfg
endif


# setup the decoding HTE
if ($?DECODEHTE) then
    cp $DECODEHTE ./HTE.hvite
else
    cp lib/htefiles/HTE.phoneloop ./HTE.hvite
endif
# overwrite some options
if ($?GRAMMARSCALE) then
    echo "set HVGSCALE = "$GRAMMARSCALE >> ./HTE.hvite
endif
if ($?INSWORD) then
    echo "set HVIMPROB = "$INSWORD >> ./HTE.hvite
endif
if ($?BEAMWIDTH) then
    echo "set HVPRUNE = "$BEAMWIDTH >> ./HTE.hvite
endif

if ($?SUBTRAIN) then
    echo "set TESTDATALIST = lib/flists/train.sub.scp" >> ./HTE.hvite
else if ($?CORETEST) then
    echo "set TESTDATALIST = lib/flists/test.core.scp" >> ./HTE.hvite
else
    echo "set TESTDATALIST = lib/flists/test.scp" >> ./HTE.hvite
endif
echo "set HMMLIST = hmms.mlist" >> ./HTE.hvite
echo "set HVCONFIG = viterbi.cfg" >> ./HTE.hvite
echo "set BASICCONFIG = basic.cfg" >> ./HTE.hvite
echo "set HVBIN = tools/htkbin/HVite" >> ./HTE.hvite
if ($?SUBTRAIN) then
#    echo "set TESTMLF = lib/mlabs/train.mlf" >> ./HTE.hvite
     echo "set TESTMLF = lib/mlabs/train_phoneexpand.mlf" >> ./HTE.hvite
else
#    echo "set TESTMLF = lib/mlabs/test.mlf" >> ./HTE.hvite
     echo "set TESTMLF = lib/mlabs/test_phoneexpand.mlf" >> ./HTE.hvite
endif
echo "set HSBIN = tools/htkbin/HResults" >> ./HTE.hvite


# do the recognition and scoring
mkdir test
if ($?SUBTRAIN) then
    set testset = subtrain
else if ($?CORETEST) then
    set testset = core
else
    set testset = test 
endif
tools/scripts/hvite HTE.hvite timit $testset decodeHMMs


