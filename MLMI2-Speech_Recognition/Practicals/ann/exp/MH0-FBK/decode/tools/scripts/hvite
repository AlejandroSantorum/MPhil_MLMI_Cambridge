#!/bin/csh -f

#set verbose

#---------------------------------------------------------------#
# HTK Unix Shell Script: hvite                                  #
#                                                               #
# Usage:  hvite  env type set hmmdir                            #
#                                                               #
# hvite uses the HTK environment settings to recognise the      #
# specified set of test files and then compares them with the   #
# reference labels using HResults.                              #
# type  is used to select a type of test of conditions from the #
# env file. set selects the test data independently of type.    #
# The test results are stored in a directory called             #
# test_type_set.k inside the source hmm directory hmmdir        #
# where k is the  repetition idx.                               #
# A copy of the env file containing the test parameters is left #
#in the test directory (typically changed for different indexes)#         
# The shell variable TESTSET is set equal to set & is used to   #
# specify the test data in the HTE file.                        #
# Others variables in the HTE file are indexed to reflect       #
# values with different type the different type in an order     #
# given by the HTE variable TYPELIST                            #
#                                                               #
#   TESTDATALIST- list of test files (TESTSET)                  #
#   TESTMLF     - MLF for reference labs (if used)  (TESTSET)   #
#   TESTLABDIR  - dir holding reference lab files               #
#   HMMLIST     - list of models to use in testing              #
#   HVTRACE     - trace level                                   #
#   HVPRUNE     - pruning threshold (indexed)                   #
#   HVWEPRUNE   - word-end pruning threshold (indexed)          #
#   HVMAXACTIVE - max number of phone insts active (indexed)    #
#   HVGSCALE    - grammar scale factor (indexed)                #
#   HVIMPROB    - inter-model log probability addition(indexed) #
#   HVNET       - network definition file (indexed)             #
#   WORDLIST    - list of vocabulary items                      #
#   HRNIST      - run HResults in NIST mode                     #
#   HREQSET     - the eq file used in scoring                   #
#   HVBIN       - the HVite binary to invoke                    #
#   HSBIN       - the HResult binary to invoke                  #
#   HLBIN       - the HLEd binary to invoke                     #
#                                                               #
#---------------------------------------------------------------#
#
# Copyright (c) Phil Woodland, Steve Young, and Chao Zhang 1992-2015
#
# Last Updated 5/08/2016 
#

set HVBIN = tools/htkbin/HVite
set HSBIN = tools/htkbin/HResults
set HLBIN = tools/htkbin/HLEd

# Check Number of Args 
if (( $#argv != 4) && ( $#argv != 5)) then
   echo "Usage: hvite env tsttype tstset hmmdir [inxformdir]"
   exit 1
endif

# Read the environment file
if ( ! -f $1 ) then
   echo "Cannot find environment file $1"
   exit 1
endif

set TYPE = $argv[2]

set SET = $argv[3]

# Load in the environment file
source $argv[1]

if ($?HVITECMD) then
    set HVITE = $HVITECMD
endif
if ($?LIBCMD) then
    set LIB = $LIBCMD
endif
if ($?LIB) then
    setenv LD_LIBRARY_PATH ${LIB}:${LD_LIBRARY_PATH}
endif

# Check the type
#if (! $?TYPELIST) then
#   echo "htestrm: TYPELIST  not set"
#   exit
#endif
#unset INDEX
#set count=0
#foreach i ($TYPELIST)
#   @ count++
#   if ($i == $TYPE) then
#      set INDEX=$count
#   endif
#end
#if (! $?INDEX) then
#   echo "htestrm: $TYPE not in TYPELIST"   
#   exit
#endif

# Check the test set
#unset setfound
#if (! $?SETLIST) then
#   echo "htestrm: SETLIST  not set"
#   exit
#endif
#foreach i ($SETLIST)
#   if ($i == $SET) then
#      set setfound
#   endif
#end

#if ( (! $?setfound) && ( $SET != dms0_tst ) ) then
#	echo "htestrm: $SET not in SETLIST\n";
#        exit
#endif

# Check hmmsource Exists
set HMMDIR = $argv[4]
if ( ! -d $HMMDIR ) then
   echo "hvite: error - hmm directory $HMMDIR does not exist"
   exit 1
endif

# Set test dir
unset TESTDIRSET
set TESTEXTN=1
while (! $?TESTDIRSET)
   if ($?HVALIGN) then
      set TESTDIR = align
   else 
      set TESTDIR = test
   endif
   mkdir -p $TESTDIR
   set TESTDIRSET
   #if ( ! -d $TESTDIR ) then
   #   mkdir -p $TESTDIR
   #   set TESTDIRSET
   #else
   #   @ TESTEXTN++
   #endif
end

# Define the file to log all output/errors to
set LOG=$TESTDIR/LOG

# Copy the test HTE file as a record
cp $argv[1] $TESTDIR/HTE

# Check the equates file and load equates
if ($?HREQSET) then
   if ( ! -f $HREQSET ) then
      echo "Cannot find HResults equates file $HREQSET"
      exit 1
   endif
   set EQSETS = `cat $HREQSET`
endif

# Set HVite Options
set OPT = ( -H $HMMDIR/MMF )

if ( $#argv == 5 ) then
   set INXFDIR=$5
   set OPT = ( $OPT -k -J $INXFDIR )
   if ($?HVINXFORMEXT) then
      set OPT = ($OPT $HVINXFORMEXT)
   endif
endif 

if ( $?HVFORCEXFORMDIR ) then
   while ( $#HVFORCEXFORMDIR > 0 )
      set OPT = ($OPT -J $HVFORCEXFORMDIR[1])
      shift HVFORCEXFORMDIR
   end
endif
# Always have the source directory as a possible input directory
set OPT = ($OPT -J $HMMDIR)
if ($?HVFORCEMACRO) then
   while ( $#HVFORCEMACRO > 0 )
      set OPT = ($OPT -H $HVFORCEMACRO[1])
      shift HVFORCEMACRO
   end
endif

if ($?HVINCADAPT) then
   set OPT = ($OPT -j $HVINCADAPT -K $TESTDIR)
   if ($?HVOUTXFORMEXT) then
      set OPT = ($OPT $HVOUTXFORMEXT)
   endif   
else if ($?HVADAPT) then
   set OPT = ($OPT -K $TESTDIR)
   if ($?HVOUTXFORMEXT) then
      set OPT = ($OPT $HVOUTXFORMEXT)
   endif
endif

set HVOPFILE=$TESTDIR/"$TYPE"_"$SET".mlf
set HLOPFILE=$TESTDIR/"$TYPE"_"$SET".mergesil.mlf
set HLOPFILEPHONEEXPAND=$TESTDIR/"$TYPE"_"$SET".mergesil_phoneexpand.mlf

set OPT = ( $OPT -i $HVOPFILE )
if ($?HVSTATEALIGN) then
    set OPT = ( $OPT -X lab )
else
    set OPT = ( $OPT -X rec )
endif

if ($?HVTRACE) then
   set OPT = ($OPT -T $HVTRACE)
endif

# add the indexed options

if ($?HVPRUNE) then
   set OPT = ($OPT -t $HVPRUNE)
endif
if ($?HVWEPRUNE) then
   set OPT = ($OPT -v $HVWEPRUNE)
endif
if ($?HVMAXACTIVE) then
   set OPT = ($OPT -u $HVMAXACTIVE)
endif
if ($?HVGSCALE) then
   set OPT = ($OPT -s $HVGSCALE)
endif
if ($?HVIMPROB) then
   set OPT = ($OPT -p $HVIMPROB)
endif
if ($?HVXFORMCONFIG) then
   set OPT = ($OPT -C $HVXFORMCONFIG )
endif
if ($?BASICCONFIG) then
   set OPT = ($OPT -C $BASICCONFIG )
endif
if ($?HVLABFORMAT) then
   set OPT = ($OPT -o $HVLABFORMAT )
endif
if ($?HVALIGN) then
   if ($?HVSTATEALIGN) then
       #set OPT = ($OPT -f -o PF -b \!SENT_START -a -y lab)
       set OPT = ($OPT -f -o PF -b sil -a -y lab)
   else
       #set OPT = ($OPT -m -o TPMFW -b \!SENT_START -a -y lab)
       set OPT = ($OPT -m -o TPMFW -b sil -a -y lab)
   endif
   if ($?ALIGNMLF) then
       set OPT = ( $OPT -I $ALIGNMLF  )
   else 
       echo "Must specify an alignment MLF"
       exit 1
   endif
else 
   set OPT = ($OPT -w $HVNET )
endif

set VOC=$HVVOC

# -------------- Run HVite -----------------

echo "HVite started at `date`" > $LOG
if ($?HVSPKRMASK) then
   $HVBIN -h "$HVSPKRMASK" -A -D -V -C $HVCONFIG $OPT -S $TESTDATALIST $VOC $HMMLIST >>& $LOG
else
   $HVBIN -A -D -V -C $HVCONFIG $OPT -S $TESTDATALIST $VOC $HMMLIST >>& $LOG
endif
if ( $status != 0 ) then
   echo "$HVBIN terminated abnormally at `date`" >> $LOG
   echo "" >> $LOG 
   exit $status
else
   echo "$HVBIN finished at `date`" >> $LOG
   echo "" >> $LOG
endif

# -------------- Run HLEd ------------------

$HLBIN -A -D -V -T 1 -X rec -i $HLOPFILE lib/edfiles/merge_sil.led $HVOPFILE >>& $LOG
$HLBIN -A -D -V -T 1 -X rec -i $HLOPFILEPHONEEXPAND lib/edfiles/phoneexpand.led $HLOPFILE >>& $LOG

# ------------------------------------------

# Now for results analysis
#

# Set the equates if any
set EQ = ""
if ($?EQSETS) then
   unset I
   foreach x ( $EQSETS )
      if (! $?I) then
         set EQ="$EQ -e "
         set I
      else
         unset I
      endif
      set EQ="$EQ $x"
   end
endif

set OPT=""

if ($?TESTMLF) then
   set OPT=($OPT -I $TESTMLF)
endif

if ($?TESTLABDIR) then
   set OPT=($OPT -L $TESTLABDIR)
endif

if ($?HRNIST) then
  set OPT = ($OPT -n)
endif

if (! ($?HVALIGN && $?HVSTATEALIGN)) then
    echo "Running $HSBIN at `date`"  >> $LOG
    #$HSBIN -A -z ':::' $OPT $EQ $WORDLIST $HVOPFILE >>& $LOG
    #$HSBIN -A $OPT $EQ $WORDLIST $HVOPFILE >>& $LOG
    $HSBIN -A $OPT $EQ $WORDLIST $HLOPFILEPHONEEXPAND >>& $LOG
    if ( $status != 0 ) then
        echo "$HSBIN terminated abnormally at `date`" >> $LOG
    else
        echo "$HSBIN finished at `date`" >> $LOG
    endif
    echo "" >> $LOG
endif

echo "hvite finished  at `date`" >> $LOG

#---------------------------------------------------------------#
#                   End of Script: hvite                        #
#---------------------------------------------------------------#
