#!/bin/bash
#SBATCH -J GDBNMT
#SBATCH -A MLMI-as3159-SL2-CPU
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=3:0:0
#SBATCH -p skylake,cclake
#SBATCH --array=1-100
#SBATCH --output=logs/gdbnmt.cpu_%A_%a.out
#SBATCH --error=logs/gdbnmt.cpu_%A_%a.err
#! Don't put any #SBATCH directives below this line
#! Modify the environment seen by the application. For this example we need the default modules.

# decoding times, on 100 CPUs:
#  winomt is clocked at less than 5 minutes (39 sentences per job)
#  wmt18 is clocked at about 5 minutes (30 sentences per job)

. /etc/profile.d/modules.sh                # This line enables the module command
module purge                               # Removes all modules still loaded
module load rhel7/default-peta4            # REQUIRED - loads the basic environment

source /rds/project/rds-xyBFuSj0hm0/MLMI8.L2022/envs/README.MLMI8.1.activate
GDBNMTBDIR=/rds/project/rds-xyBFuSj0hm0/MLMI8.L2022/GDBNMT
C=$GDBNMTBDIR/configs/wmt18.1.ende.wfsa.adapt.1.ini
BD=exps/wmt18.0.01.90.cpu/

for SET in winomt wmt18
do
    S=$GDBNMTBDIR/fairseq.pretrained/$SET.en-de.en.bpe
    F=fsts/$SET.sgnmt.wmt18ensemble.1.ga/%d.fst
    D=$BD/$SET/
    mkdir -p $D
    
    NL=`cat $S | wc -l`
    bp=1
    ep=$NL
    # set NJOBS to be consistent with --array=1-xyz , above
    NJOBS=100
    if (( $NJOBS > 1 )); then
        chunk=$(( ($NL/$NJOBS) + 1))
        bp=$(( (SLURM_ARRAY_TASK_ID-1) * $chunk + 1))
        ep=$(( SLURM_ARRAY_TASK_ID * $chunk ))
        if (( $NJOBS == $SLURM_ARRAY_TASK_ID )); then
	        ep=$NL
        fi
    fi
    OFILE=$D/$SET.$SLURM_ARRAY_TASK_ID
    python $SGNMT/decode.py --config_file=$C --range=$bp:$ep --output_path=$OFILE --src_test=$S --fst_path=$F
done
touch $BD/done.$SLURM_ARRAY_TASK_ID

# if final job, wait for other jobs, and gather up results as they finish
if (( $SLURM_ARRAY_TASK_ID == $NJOBS )); then
    rm $D/wmt18/wmt18.tok $D/winomt/winomt.tok
    for j in `seq $NJOBS`; do
	    echo "waiting for job $j"
	    while [ !  -f $BD/done.$j ]
	    do
	        sleep 2
	    done
	    cat $BD/wmt18/wmt18.$j >> $BD/wmt18/wmt18.tok
	    cat $BD/winomt/winomt.$j >> $BD/winomt/winomt.tok
        rm $BD/done.$j
    done
    cat $BD/winomt/winomt.tok | sacremoses -l de detokenize > $BD/winomt/winomt.detok
    cat $BD/wmt18/wmt18.tok | sacremoses -l de detokenize > $BD/wmt18/wmt18.detok
fi
